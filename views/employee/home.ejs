<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employee Dashboard</title>
    <link rel="stylesheet" href="/css/style.css"> <!-- Link to CSS -->
      <!-- Favicon -->
      <link rel="icon"   href="https://res.cloudinary.com/dqfnwh89v/image/upload/v1724408615/qxvvfcf7ftgklhl2k03v.png" type="image/png">

      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
       /* Global Styles */
body {
  font-family: Open Sans, sans-serif;
    font-size: 14px;
    font-weight: 400;
    font-style: normal;
    font-stretch: normal;
    line-height: normal;
    letter-spacing: normal;
    text-align: left;
    color: #3b4452;
    background-color: #f7f7f7;
}
  /* Dashboard Container */
  .dashboard-container {
        margin-left: 280px; /* Sidebar width */
        padding: 30px;
        transition: margin-left 0.3s ease-in-out;
    }

    h1 {
        font-size: 24px;
        font-weight: 600;
        color: #333;
    }

    p {
        font-size: 16px;
        color: #555;
    }

    /* ðŸ”¹ Quote Box */
    .quote-container {
        background: #f9f9f9;
        padding: 15px;
        border-left: 5px solid #007aff;
        font-style: italic;
        color: #444;
        margin-bottom: 20px;
        border-radius: 8px;
    }

    /* ðŸ”¹ Grid Layout */
    .grid-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }

    /* ðŸ”¹ Cards */
    .card {
        background: white;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s;
    }

    .card:hover {
        transform: translateY(-5px);
    }

    .punch-card {
        text-align: center;
    }

    .punch-card button {
        background: #007aff;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
    }

    /* ðŸ“± Mobile View: Hide Sidebar */
    @media screen and (max-width: 1024px) {
        .dashboard-container {
            margin-left: 0;
            padding: 20px;
        }
    }
</style>
    <script>
        function formatISTTime(utcTime) {
    const date = new Date(utcTime);
    return date.toLocaleString("en-IN", { timeZone: "Asia/Kolkata" });
}

document.addEventListener("DOMContentLoaded", async () => {
    await checkPunchStatus();
});

async function checkPunchStatus() {
    try {
        const response = await fetch('/dashboard/employee/punch-status', { method: 'GET', credentials: 'include' });
        const data = await response.json();

        const punchButton = document.getElementById("punchButton");

        if (data.punchedIn) {
            punchButton.textContent = "Punch Out";
            punchButton.setAttribute("onclick", "confirmPunchOut()");
        } else {
            punchButton.textContent = "Punch In";
            punchButton.setAttribute("onclick", "punchIn()");
        }
    } catch (error) {
        console.error("Error checking punch status:", error);
    }
}

// Punch In
async function punchIn() {
    try {
        const response = await fetch('/dashboard/employee/punch-in', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
        });
        const data = await response.json();

        if (response.ok) {
            Swal.fire({
                icon: "success",
                title: "Success!",
                text: data.message
            }).then(() => {
                location.reload();
            });
        } else {
            Swal.fire({
                icon: "error",
                title: "Error!",
                text: data.message
            });
        }
    } catch (error) {
        console.error("Punch-in error:", error);
        Swal.fire({
            icon: "error",
            title: "Server Error!",
            text: "Something went wrong."
        });
    }
}

// Confirm Punch Out
function confirmPunchOut() {
    Swal.fire({
        title: "Are you sure?",
        text: "Do you want to Punch Out?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonText: "Yes, Punch Out!",
        cancelButtonText: "Cancel"
    }).then((result) => {
        if (result.isConfirmed) {
            punchOut();
        }
    });
}

// Punch Out
async function punchOut() {
    try {
        const response = await fetch('/dashboard/employee/punch-out', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
        });
        const data = await response.json();

        if (response.ok) {
            Swal.fire({
                icon: "success",
                title: "Success!",
                text: data.message
            }).then(() => {
                location.reload();
            });
        } else {
            Swal.fire({
                icon: "error",
                title: "Error!",
                text: data.message
            });
        }
    } catch (error) {
        console.error("Punch-out error:", error);
        Swal.fire({
            icon: "error",
            title: "Server Error!",
            text: "Something went wrong."
        });
    }
}



        //time for puchin out btn card
        function updateDateTime() {
    const now = new Date();

    // Format date: "4 March 2025"
    const dateOptions = { day: 'numeric', month: 'long', year: 'numeric' };
    const formattedDate = now.toLocaleDateString('en-GB', dateOptions);

    // Format time: "Tuesday | 10:00 AM To 7:00 PM"
    const timeOptions = { weekday: 'long', hour: '2-digit', minute: '2-digit', hour12: true };
    const formattedTime = now.toLocaleDateString('en-GB', { weekday: 'long' }) + 
                          " | 10:00 AM To 7:00 PM";

    // Format seconds time: "11 : 59:10"
    const formattedSeconds = now.getHours().toString().padStart(2, '0') + " : " + 
                             now.getMinutes().toString().padStart(2, '0') + ":" + 
                             now.getSeconds().toString().padStart(2, '0');

    // Set values in HTML
    document.getElementById("dateDisplay").textContent = formattedDate;
    document.getElementById("timeDisplay").textContent = formattedTime + " | " + formattedSeconds;
}

// Update time every second
setInterval(updateDateTime, 1000);
updateDateTime();
    </script>
</head>

<body>

    <%- include('../partials/sidebar') %> <!-- Include the Sidebar -->

    <div class="dashboard-container">
        <h1><%= greeting %>, <%= employee.name %>!</h1>
        <p>Employee ID: <%= employee.emp_id %></p>
    
        <!-- âœ… Motivational Quote Box -->
        <div class="quote-container">
            <blockquote><%= randomQuote %></blockquote>
        </div>
    
        <!-- ðŸ”¹ Profile Section with Cards (Grid Layout) -->
        <div class="grid-container">
            <div class="card profile-card">
                <h2><%= employee.name %></h2>
                <p>Role: <%= employee.role %></p>
            </div>
    
            <div class="card punch-card">
                <p id="dateDisplay"></p>
                <p id="timeDisplay"></p>
                <button id="punchButton" onclick="handlePunch()">Loading...</button>
            </div>
    
            <div class="card info-card">
                <h3>Contact Info</h3>
                <p>Email: <%= employee.email %></p>
                <p>Phone: <%= employee.emp_number %></p>
            </div>
    
            <div class="card work-card">                                                                                                    
                <h3>Work Details</h3>
                <p>Designation: <%= employee.designation %></p>
                <p>Joining Date:<%= new Date(employee.joining_date).toLocaleDateString("en-GB", { day: "2-digit", month: "2-digit", year: "2-digit" }) %></p>
            </div>
        </div>
    </div>                                                                                                                                              
    
   
    
    </body>                                                                      
    
</html>