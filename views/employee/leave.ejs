<%- include('../partials/sidebar') %>
  <!DOCTYPE html>
  <html lang="en">

  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon"   href="https://res.cloudinary.com/dqfnwh89v/image/upload/v1724408615/qxvvfcf7ftgklhl2k03v.png" type="image/png">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <title>Leave Dashboard</title>
    
    <style>
   /* General Styles */
body {
    font-family: Arial, sans-serif;
    background-color: #f4f7fc;
    margin: 0;
    padding: 30px;
    display: flex;
}

/* Main Content */
.container {
  margin-left: 280px; /* Sidebar width */
  transition: margin-left 0.3s ease-in-out;
    padding: 20px;
    width: 100%;
}

/* Leave Balance Cards */
.leave-balance-cards {
    display: flex;
    gap: 20px;
    margin-bottom: 20px;
}

.leave-balance-card {
    background: white;
    padding: 15px;
    border-radius: 8px;
    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
    text-align: center;
    flex: 1;
}

.leave-balance-card h3 {
    margin-bottom: 10px;
    color: #2c3e50;
}

/* Buttons */
.button-group {
    display: flex;
    gap: 10px;
    margin-bottom: 20px;
}

.button-group button {
    background: #3498db;
    border: none;
    padding: 10px 15px;
    color: white;
    border-radius: 5px;
    cursor: pointer;
}

.button-group button:hover {
    background: #2980b9;
}

/* Form Styling */
form {
    background: white;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
    margin-bottom: 20px;
}

form label {
    display: block;
    margin-top: 10px;
    font-weight: bold;
}

form input,
form select {
    width: 100%;
    padding: 8px;
    margin-top: 5px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

form button {
    background: #27ae60;
    color: white;
    border: none;
    padding: 10px;
    margin-top: 15px;
    border-radius: 5px;
    cursor: pointer;
}

form button:hover {
    background: #219150;
}

/* Table Styling */
table {
    width: 100%;
    background: white;
    border-collapse: collapse;
    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
    border-radius: 8px;
    overflow: hidden;
}

th, td {
    padding: 12px;
    text-align: center;
    border-bottom: 1px solid #ddd;
}

th {
    background: #2c3e50;
    color: white;
}

tr:hover {
    background: #f1f1f1;
}

/* Status Badges */
.badge {
    padding: 5px 10px;
    border-radius: 5px;
    font-weight: bold;
}

.bg-success {
    background: #27ae60;
    color: white;
}

.bg-warning {
    background: #f1c40f;
    color: black;
}

.bg-danger {
    background: #e74c3c;
    color: white;
}

/* Mobile Responsiveness */
@media (max-width: 768px) {
    .container {
        margin-left: 0;
        padding: 15px;
    }

    .sidebar {
        display: none;
    }

    .leave-balance-cards {
        flex-direction: column;
    }

    .button-group {
        flex-direction: column;
    }

    table {
        display: block;
        overflow-x: auto;
        white-space: nowrap;
    }
}

/* Select Box */
.selectBox {
    position: relative;
    width: 100%;
    border: 1px solid #ccc;
    border-radius: 5px;
    background: white;
    padding: 10px;
    cursor: pointer;
}

/* Select Text */
.selectBox select {
    width: 100%;
    border: none;
    background: none;
    font-size: 16px;
    outline: none;
    cursor: pointer;
}

/* Checkbox List (Hidden by Default) */
.checkbox-list {
    display: none;
    position: absolute;
    width: 100%;
    background: white;
    border: 1px solid #ccc;
    border-top: none;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    max-height: 200px;
    overflow-y: auto;
    z-index: 10;
}

/* Show Dropdown */
.show {
    display: block !important;
}

/* Checkbox Items */
.checkbox-list label {
    display: block;
    padding: 10px;
    border-bottom: 1px solid #f1f1f1;
    cursor: pointer;
}

.checkbox-list label:hover {
    background: #f1f1f1;
}

/* Checkbox Input */
.checkbox-list input {
    margin-right: 10px;
}

/* Mobile Responsiveness */
@media (max-width: 768px) {
    .selectBox {
        padding: 8px;
    }
}


    </style>
  </head>
    
  <body>
  
    <div class="container">
      <!-- Leave Balance Cards -->
      <h2>Leave Balance</h2>
      <div class="leave-balance-cards">
        <div class="leave-balance-card">
          <h3>Total Accrued Leave</h3>
          <p>
            <%= employeeData.leave_balance %> days
          </p>
        </div>
        <div class="leave-balance-card">
          <h3>Leave Taken</h3>
          <p>
            <%= employeeData.leave_taken %> days
          </p>
        </div>
        <div class="leave-balance-card">
          <h3>Remaining Leave</h3>
          <p>
            <%= employeeData.leave_balance %> days
          </p>
        </div>
      </div>

      <!-- Leave Application Form and Leave List -->
      <div class="main-content">
        <h2>Leave Management</h2>
        <div class="button-group">
          <button onclick="showSection('applySection')">Apply</button>
          <button onclick="showSection('pendingSection')">Pending</button>
          <button onclick="showSection('historySection')">History</button>
        </div>

        <!-- Leave Application Form -->
        <div id="applySection" class="section">
          <h3>Leave Application</h3>
          <form id="leaveForm">
            <label for="start_date">Start Date:</label>
            <input type="date" id="start_date" required>

            <label for="end_date">End Date:</label>
            <input type="date" id="end_date" required>

            <label for="leave_type">Type:</label>
            <select id="leave_type">
              <option value="Sick">Sick</option>
              <option value="Casual">Casual</option>
              <option value="Paid">Paid</option>
            </select>

            <label for="half_day">Half Day:</label>
            <select id="half_day">
              <option value="">Full Day</option>
              <option value="1st half">1st Half</option>
              <option value="2nd half">2nd Half</option>
            </select>

            <label for="remark">Reason:</label>
            <input type="text" id="remark">


            <div id="cc" class="selectBox" onclick="toggleCheckboxes()">

              <select>
                <option>Select employees</option>
              </select>
              <div id="checkboxes" class="checkbox-list"></div>
            </div>


            <button type="submit">Apply</button>
          </form>
        </div>

        <!-- Pending Leaves -->
        <div id="pendingSection" class="section" style="display: none;">
          <h3>Pending Leaves</h3>
          <table>
            <thead>
              <tr>
                <th>Date</th>
                <th>Type</th>
                <th>Half Day</th>
                <th>Status</th>
                <th>Action</th>

              </tr>
            </thead>
            <tbody id="pendingList"></tbody>
          </table>
        </div>


        <div id="historySection" class="section" style="display: none;">
          <h3>Leave History</h3>
          <table>
            <thead>
              <tr>
                <th>Date</th>
                <th>Type</th>
                <th>Half Day</th>
                <th>Status</th>
              </tr>
            </thead>
            <tbody id="leaveList">
              <!-- Leave list items go here -->
            </tbody>
          </table>
        </div>
      </div>


      <script>

        document.addEventListener('DOMContentLoaded', async () => {
          const checkboxes = document.getElementById('checkboxes');
          const ccSelectBox = document.querySelector('#cc .selectBox select');

          try {
            const response = await fetch('/dashboard/employee/cc', { credentials: 'include' });
            const result = await response.json();

            if (result.success) {
              result.employees.forEach(employee => {
                const label = document.createElement('label');
                const input = document.createElement('input');
                input.type = 'checkbox';
                input.value = employee.emp_id;
                input.onclick = updateSelectedOptions;
                label.appendChild(input);
                label.appendChild(document.createTextNode(employee.name));
                checkboxes.appendChild(label);
              });
            } else {
              console.error('Failed to fetch employees:', result.message);
            }
          } catch (error) {
            console.error('Error fetching employees:', error);
          }
        });

        function toggleCheckboxes() {
          const checkboxes = document.getElementById('checkboxes');
          checkboxes.style.display = checkboxes.style.display === 'block' ? 'none' : 'block';
        }

        function updateSelectedOptions() {
          const checkboxes = document.querySelectorAll('#checkboxes input[type=checkbox]');
          const selectedOptions = [];
          checkboxes.forEach(checkbox => {
            if (checkbox.checked) {
              selectedOptions.push(checkbox.nextSibling.nodeValue);
            }
          });
          const ccSelectBox = document.querySelector('#cc .selectBox select');
          ccSelectBox.options[0].text = selectedOptions.length > 0 ? selectedOptions.join(', ') : 'Select employees';
        }

        document.addEventListener('click', function (event) {
          const target = event.target;
          if (!target.closest('#cc')) {
            document.getElementById('checkboxes').style.display = 'none';
          }
        });

        document.getElementById("leaveForm").onsubmit = async function (event) {
    event.preventDefault();

    Swal.fire({
        title: "Are you sure?",
        text: "Do you want to apply for leave?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, apply!"
    }).then(async (result) => {
        if (result.isConfirmed) {
            const selectedCC = [];
            document.querySelectorAll('#checkboxes input[type="checkbox"]:checked').forEach(checkbox => {
                selectedCC.push(checkbox.value);
            });

            const data = {
                start_date: document.getElementById("start_date").value,
                end_date: document.getElementById("end_date").value,
                leave_type: document.getElementById("leave_type").value,
                half_day: document.getElementById("half_day").value,
                reason: document.getElementById("remark").value,
                cc: selectedCC
            };

            const response = await fetch("/dashboard/employee/leave/apply", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(data),
                credentials: "include"
            });

            const result = await response.json();
            Swal.fire("Success!", result.message, "success").then(() => {
                location.reload();
            });
        }
    });
};

async function cancelLeave(leaveId) {
    if (!leaveId) {
        Swal.fire("Error!", "Invalid leave ID.", "error");
        return;
    }

    Swal.fire({
        title: "Are you sure?",
        text: "Do you want to withdraw this leave?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, withdraw!"
    }).then(async (result) => {
        if (result.isConfirmed) {
            const response = await fetch('/dashboard/employee/leave/cancel', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ leaveId: leaveId }),
                credentials: 'include'
            });

            const result = await response.json();
            Swal.fire("Success!", result.message, "success").then(() => {
                fetchPendingLeaves();
            });
        }
    }); 
}


        async function fetchLeaves() {
          const response = await fetch("/dashboard/employee/leave/list", { credentials: "include" });
          const result = await response.json();

          const leaveList = document.getElementById("leaveList");
          leaveList.innerHTML = result.leaves.map(leave => `
        <tr>
            <td>${leave.start_date} to ${leave.end_date}</td>
            <td>${leave.leave_type}</td>
            <td>${leave.half_day || "Full Day"}</td>
            <td>${leave.status}</td>
        </tr>
    `).join('');
        }

        fetchLeaves();

        function showSection(sectionId) {
          document.querySelectorAll('.section').forEach(section => section.style.display = 'none');
          document.getElementById(sectionId).style.display = 'block';

          if (sectionId === 'pendingSection') {
            fetchPendingLeaves();
          } else if (sectionId === 'historySection') {
            fetchLeaveHistory();
          }
        }

        async function fetchPendingLeaves() {
    const response = await fetch('/dashboard/employee/leave/list?status=pending', { credentials: 'include' });
    const result = await response.json();
    const pendingList = document.getElementById('pendingList');

    pendingList.innerHTML = result.leaves.map(leave => {
        const startDate = new Date(leave.start_date).toLocaleDateString('en-GB'); // Format: DD/MM/YYYY
        const endDate = new Date(leave.end_date).toLocaleDateString('en-GB'); // Format: DD/MM/YYYY

        return `
            <tr>
                <td>${startDate} to ${endDate}</td>
                <td>${leave.leave_type}</td>
                <td>${leave.half_day || "Full Day"}</td>
                <td>${leave.status}</td>
                <td><button onclick="cancelLeave(${leave.id})">withdrawal</button></td>
            </tr>
        `;
    }).join('');
}


          async function fetchLeaveHistory() {
            const response = await fetch('/dashboard/employee/leave/list?status=history', { credentials: 'include' });
            const result = await response.json();
            const historyList = document.getElementById('historyList');
            historyList.innerHTML = result.leaves.map(leave => `
          <tr>
              <td>${leave.start_date} to ${leave.end_date}</td>
              <td>${leave.leave_type}</td>
              <td>${leave.half_day || "Full Day"}</td>
              <td>${leave.status}</td>
          </tr>
      `).join('');
          }

        async function cancelLeave(leaveId) {
    if (!leaveId) {
        Swal.fire("Error!", "Invalid leave ID.", "error");
        return;
    }

    Swal.fire({
        title: "Are you sure?",
        text: "Do you want to withdraw this leave?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, withdraw!"
    }).then(async (result) => {
        if (result.isConfirmed) {
            const response = await fetch('/dashboard/employee/leave/cancel', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ leaveId: leaveId }),
                credentials: 'include'
            });

            const result = await response.json();
            Swal.fire("Success!", result.message, "success").then(() => {
                fetchPendingLeaves();
            });
        }
    });
}






        function toggleCheckboxes() {
    let checkboxes = document.getElementById("checkboxes");
    checkboxes.classList.toggle("show");
}

// Close dropdown when clicking outside
document.addEventListener("click", function (event) {
    let selectBox = document.querySelector(".selectBox");
    let checkboxes = document.getElementById("checkboxes");

    if (!selectBox.contains(event.target)) {
        checkboxes.classList.remove("show");
    }
});


      </script>
  </body>

  </html>