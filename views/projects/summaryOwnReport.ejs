<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Work Summary</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f4f7fc;
            margin: 0;
            padding: 0;
            color: #333;
        }
    
        .container {
            /* max-width: 1200px; */
            /* margin: 40px auto; */
            padding: 20px;
            background: #ffffff;
            border-radius: 12px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        .main-content {
            margin-left: 270px;
            padding: 20px;
            transition: margin-left 0.3s ease;
        }

        @media (max-width: 1000px) {
            .main-content {
                margin-left: 0;
            }
        }
    
        h1 {
            font-size: 28px;
            color: #333;
            margin-bottom: 20px;
            margin-top: 0;
        }

        select {
            width: 100%;
            padding: 12px;
            border: 2px solid #007bff;
            border-radius: 6px;
            font-size: 16px;
            margin-bottom: 20px;
            cursor: pointer;
            background-color: #f1f8ff;
            transition: border 0.3s ease;
        }

        select:hover {
            border-color: #0056b3;
        }
    
        canvas {
            margin-top: 20px;
            background: #fff;
            border-radius: 10px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        }
    
        h2 {
            font-size: 24px;
            color: #333;
            margin-top: 40px;
            margin-bottom: 15px;
        }
    
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            background: #fff;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.1);
        }
    
        th, td {
            padding: 14px;
            border-bottom: 1px solid #ddd;
            text-align: center;
        }
    
        th {
            background: #007bff;
            color: white;
            font-size: 16px;
            font-weight: bold;
        }
    
        td {
            font-size: 15px;
            color: #333;
        }
    
        tr:hover {
            background: #f1f1f1;
        }

        tr:first-child {
            background: #e9f7fe;
        }

        .hamburger {
            font-size: 28px;
            cursor: pointer;
            padding: 12px;
            position: absolute;
            left: 20px;
            top: 15px;
            background: #007bff;
            color: white;
            border-radius: 8px;
        }
    
        .hamburger:hover {
            background: #0056b3;
        }
    
        .container h1, .container h2 {
            font-weight: 600;
        }

        /* Scrollbar customization */
        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #f1f1f1;
        }

        ::-webkit-scrollbar-thumb {
            background: #888;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #555;
        }
    </style>
</head>
<body>
    
    <%- include('../partials/sidebar') %>   

    <div class="main-content">
        <div class="container">
            <h1>ðŸ“Š My Work Hours Summary</h1>
        
            <select id="project">
                <option value="">All Projects</option>
                <% if (projects && projects.length > 0) { %>
                    <% projects.forEach(proj => { %>
                        <option value="<%= proj.project_id %>"><%= proj.project_name %></option>
                    <% }); %>
                <% } else { %>
                    <option value="" disabled>No projects available</option>
                <% } %>
            </select>
        
            <canvas id="workSummaryChart"></canvas>
        
            <h2>ðŸ“… Date-wise Work Summary</h2>
            <table>
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Project</th>
                        <th>Work Description</th>
                        <th>Work Hours</th>
                    </tr>
                </thead>
                <tbody id="reportTableBody">
                    <tr><td colspan="4">Loading data...</td></tr>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        $(document).ready(function () {
            const projSelect = $("#project");
            let workChart = null;
    
            function getFullMonthDays() {
                let today = new Date();
                let daysInMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0).getDate();
                return Array.from({ length: daysInMonth }, (_, i) => (i + 1).toString());
            }
    
            function fetchSummary() {
                const projectId = projSelect.val();
    
                $.ajax({
                    url: "/dashboard/employee/projects/get-own-summary",
                    method: "GET",
                    data: { project_id: projectId },
                    success: function (data) {
                        console.log("Raw Data from API:", data);
    
                        const daysInMonth = getFullMonthDays();
                        let hoursByDay = {};
                        daysInMonth.forEach(day => (hoursByDay[day] = 0)); // Initialize all days with 0 hours
    
                        let groupedData = {};
    
                        data.forEach(entry => {
                            let day = new Date(entry.date).getDate().toString();
                            hoursByDay[day] += parseFloat(entry.hours) || 0; // Ensure it's a number
    
                            if (!groupedData[entry.date]) {
                                groupedData[entry.date] = [];
                            }
                            groupedData[entry.date].push(entry);
                        });
    
                        // Convert hoursByDay object to an array
                        let hoursArray = daysInMonth.map(day => hoursByDay[day]);
    
                        renderChart(daysInMonth, hoursArray);
                        renderTable(groupedData);
                    },
                    error: function () {
                        $("#reportTableBody").html(`<tr><td colspan="4">Error loading data.</td></tr>`);
                    }
                });
            }
    
            function renderChart(dates, hours) {
                const ctx = document.getElementById("workSummaryChart").getContext("2d");
                if (workChart) workChart.destroy();
    
                workChart = new Chart(ctx, {
                    type: "bar",
                    data: {
                        labels: dates,
                        datasets: [{
                            label: "Total Work Hours",
                            data: hours,
                            backgroundColor: "rgba(54, 162, 235, 0.6)",
                            borderColor: "rgba(54, 162, 235, 1)",
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            x: { title: { display: true, text: "Day of the Month" } },
                            y: { beginAtZero: true, title: { display: true, text: "Total Hours Worked" } }
                        }
                    }
                });
            }
    
            function renderTable(groupedData) {
                let html = "";

                if (Object.keys(groupedData).length === 0) {
                    html = `<tr><td colspan="4">No records found.</td></tr>`;
                } else {
                    Object.keys(groupedData).forEach(date => {
                        groupedData[date].forEach(entry => {
                            let formattedDate = new Date(entry.date).toLocaleDateString("en-GB", {
                                year: "numeric",
                                month: "short",
                                day: "2-digit"
                            });

                            html += `<tr>
                                <td>${formattedDate}</td>
                                <td>${entry.project}</td>
                                <td>${entry.work_description || "N/A"}</td>
                                 <td>${parseFloat(entry.hours).toFixed(2)} hrs</td>
                            </tr>`;
                        });
                    });
                }

                $("#reportTableBody").html(html);
            }                                                        

            projSelect.change(fetchSummary);
            fetchSummary();
        });
    </script>
    
</body>
</html>
