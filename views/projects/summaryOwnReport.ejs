<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Work Summary</title>
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <!-- Chart.js CDN -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- jQuery CDN -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        /* Custom font for better aesthetics */
        body {
            font-family: 'Inter', sans-serif;
        }
        /* Scrollbar customization for a cleaner look */
        ::-webkit-scrollbar {
            width: 8px;
        }
        ::-webkit-scrollbar-track {
            background: #f1f1f1;
        }
        ::-webkit-scrollbar-thumb {
            background: #888;
            border-radius: 10px;
        }
        ::-webkit-scrollbar-thumb:hover {
            background: #555;
        }
    </style>
</head>
<body class="bg-gray-50 text-gray-800 min-h-screen flex flex-col">

      <%- include('../partials/sidebar') %>   

    <!-- Main Content Area -->
    <div id="main-content" class="flex-1 md:ml-64 p-5 transition-all duration-300 ease-in-out">
        <!-- Hamburger menu for mobile -->
        <button id="openSidebar" class="md:hidden text-3xl cursor-pointer p-3 absolute left-5 top-4 bg-blue-600 text-white rounded-lg hover:bg-blue-700 shadow-md focus:outline-none">
            &#9776;
        </button>

        <div class="container max-w-full mx-auto p-6 bg-white rounded-xl shadow-lg text-center mt-16 md:mt-0">
            <h1 class="text-3xl font-semibold text-gray-800 mb-5 mt-0 flex items-center justify-center">
                <i class="fas fa-chart-pie mr-3 text-blue-600"></i> My Work Hours Summary
            </h1>

            <!-- Project Filter Dropdown -->
            <div class="mb-6">
                <label for="project" class="sr-only">Select Project</label>
                <select id="project" class="w-full p-3 border-2 border-blue-500 rounded-lg text-base mb-5 cursor-pointer bg-blue-50 hover:border-blue-700 transition-colors duration-300 focus:ring-2 focus:ring-blue-400 focus:border-transparent shadow-sm">
                    <option value="">All Projects</option>
                  <% if (projects && projects.length > 0) { %>
                        <% projects.forEach(proj => { %>
                            <option value="<%= proj.project_id %>"><%= proj.project_name %></option>
                        <% }); %>
                    <% } else { %>
                        <option value="" disabled>No projects available</option>
                    <% } %> 
                </select>
            </div>

            <!-- Work Summary Chart -->
            <div class="bg-white rounded-xl shadow-md p-4 mb-8">
                <canvas id="workSummaryChart" class="w-full h-auto"></canvas>
            </div>

            <h2 class="text-2xl font-semibold text-gray-800 mt-10 mb-4 flex items-center justify-center">
                <i class="fas fa-calendar-alt mr-3 text-blue-600"></i> Date-wise Work Summary
            </h2>

            <!-- Date-wise Work Summary Table -->
            <div class="overflow-x-auto">
                <table class="w-full border-collapse bg-white rounded-xl shadow-lg">
                    <thead>
                        <tr>
                            <th class="py-4 px-6 bg-blue-600 text-white text-left text-lg rounded-tl-xl">Date</th>
                            <th class="py-4 px-6 bg-blue-600 text-white text-left text-lg">Project</th>
                            <th class="py-4 px-6 bg-blue-600 text-white text-left text-lg">Work Description</th>
                            <th class="py-4 px-6 bg-blue-600 text-white text-left text-lg rounded-tr-xl">Work Hours</th>
                        </tr>
                    </thead>
                    <tbody id="reportTableBody">
                        <!-- Data will be loaded here by JavaScript -->
                        <tr><td colspan="4" class="py-4 px-6 text-center text-gray-600">Loading data...</td></tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <script>
        $(document).ready(function () {
            const projSelect = $("#project");
            let workChart = null; // Variable to hold the Chart.js instance
            let allWorkData = []; // Store all work data for filtering

            // Sidebar toggle logic
            const sidebar = $('#sidebar');
            const mainContent = $('#main-content');
            const openSidebarBtn = $('#openSidebar');
            const closeSidebarBtn = $('#closeSidebar');

            openSidebarBtn.on('click', function() {
                sidebar.removeClass('-translate-x-full');
            });

            closeSidebarBtn.on('click', function() {
                sidebar.addClass('-translate-x-full');
            });

            // Adjust main content margin on window resize for desktop view
            $(window).on('resize', function() {
                if ($(window).width() >= 768) {
                    mainContent.addClass('md:ml-64');
                    sidebar.removeClass('-translate-x-full');
                } else {
                    mainContent.removeClass('md:ml-64');
                    sidebar.addClass('-translate-x-full');
                }
            }).trigger('resize');

            /**
             * Calculates the number of days in the current month.
             * @returns {string[]} An array of day numbers (e.g., ["1", "2", ..., "31"]).
             */
            function getFullMonthDays() {
                let today = new Date();
                let daysInMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0).getDate();
                return Array.from({ length: daysInMonth }, (_, i) => (i + 1).toString());
            }

            /**
             * Filters the work data based on selected project
             * @param {string} projectId - The project ID to filter by (empty for all projects)
             * @returns {Array} Filtered work data
             */
            function filterWorkData(projectId) {
                if (!projectId) return allWorkData;
                return allWorkData.filter(entry => entry.project_id === projectId);
            }

            /**
             * Processes work data and updates the chart and table
             * @param {Array} workData - The work data to process
             */
            function processWorkData(workData) {
                const daysInMonth = getFullMonthDays();
                let hoursByDay = {};
                daysInMonth.forEach(day => (hoursByDay[day] = 0));

                let groupedData = {};

                workData.forEach(entry => {
                    let day = new Date(entry.date).getDate().toString();
                    hoursByDay[day] += parseFloat(entry.hours) || 0;

                    if (!groupedData[entry.date]) {
                        groupedData[entry.date] = [];
                    }
                    groupedData[entry.date].push(entry);
                });

                let hoursArray = daysInMonth.map(day => hoursByDay[day]);

                renderChart(daysInMonth, hoursArray);
                renderTable(groupedData);
            }

            /**
             * Fetches work summary data from the backend
             */
            function fetchSummary() {
                $.ajax({
                    url: "/dashboard/employee/projects/get-own-summary",
                    method: "GET",
                    success: function (data) {
                        console.log("Data loaded successfully");
                        allWorkData = data; // Store all data for filtering
                        
                        // Process data based on currently selected project
                        const projectId = projSelect.val();
                        const filteredData = filterWorkData(projectId);
                        processWorkData(filteredData);
                    },
                    error: function (xhr, status, error) {
                        console.error("Error fetching data:", status, error);
                        $("#reportTableBody").html(`<tr><td colspan="4" class="py-4 px-6 text-center text-red-500">Error loading data. Please try again.</td></tr>`);
                        if (workChart) {
                            workChart.destroy();
                            workChart = null;
                        }
                    }
                });
            }

            /**
             * Renders or updates the bar chart with work hours data.
             * @param {string[]} dates - Labels for the x-axis (days of the month).
             * @param {number[]} hours - Data for the y-axis (total hours for each day).
             */
            function renderChart(dates, hours) {
                const ctx = document.getElementById("workSummaryChart").getContext("2d");
                if (workChart) {
                    workChart.destroy();
                }

                workChart = new Chart(ctx, {
                    type: "bar",
                    data: {
                        labels: dates,
                        datasets: [{
                            label: "Total Work Hours",
                            data: hours,
                            backgroundColor: "rgba(54, 162, 235, 0.7)",
                            borderColor: "rgba(54, 162, 235, 1)",
                            borderWidth: 1,
                            borderRadius: 6
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: true,
                                position: 'top',
                                labels: {
                                    font: {
                                        size: 14
                                    }
                                }
                            },
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        let label = context.dataset.label || '';
                                        if (label) {
                                            label += ': ';
                                        }
                                        if (context.parsed.y !== null) {
                                            label += context.parsed.y.toFixed(2) + ' hrs';
                                        }
                                        return label;
                                    }
                                }
                            }
                        },
                        scales: {
                            x: {
                                title: {
                                    display: true,
                                    text: "Day of the Month",
                                    font: { size: 16, weight: 'bold' },
                                    color: '#555'
                                },
                                grid: {
                                    display: false
                                },
                                ticks: {
                                    font: { size: 12 }
                                }
                            },
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: "Total Hours Worked",
                                    font: { size: 16, weight: 'bold' },
                                    color: '#555'
                                },
                                ticks: {
                                    font: { size: 12 }
                                },
                                grid: {
                                    color: 'rgba(200, 200, 200, 0.2)'
                                }
                            }
                        }
                    }
                });
            }

            /**
             * Renders the detailed work summary table.
             * @param {Object} groupedData - Data grouped by date.
             */
            function renderTable(groupedData) {
                let html = "";

                if (Object.keys(groupedData).length === 0) {
                    html = `<tr><td colspan="4" class="py-4 px-6 text-center text-gray-600">No records found for the selected project.</td></tr>`;
                } else {
                    Object.keys(groupedData).sort().forEach(date => {
                        groupedData[date].forEach(entry => {
                            let formattedDate = new Date(entry.date).toLocaleDateString("en-GB", {
                                year: "numeric",
                                month: "short",
                                day: "2-digit"
                            });

                            html += `<tr class="hover:bg-gray-100 transition-colors duration-150">
                                <td class="py-3 px-6 border-b border-gray-200">${formattedDate}</td>
                                <td class="py-3 px-6 border-b border-gray-200">${entry.project_name || "N/A"}</td>
                                <td class="py-3 px-6 border-b border-gray-200">${entry.work_description || "No description"}</td>
                                <td class="py-3 px-6 border-b border-gray-200 font-semibold text-blue-700">${parseFloat(entry.hours).toFixed(2)} hrs</td>
                            </tr>`;
                        });
                    });
                }

                $("#reportTableBody").html(html);
            }

            // Event listener for project selection change
            projSelect.change(function() {
                if (allWorkData.length > 0) {
                    const projectId = $(this).val();
                    const filteredData = filterWorkData(projectId);
                    processWorkData(filteredData);
                }
            });

            // Initial data fetch when the page loads
            fetchSummary();
        });
    </script>
</body>
</html>
