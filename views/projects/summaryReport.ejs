<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employee Work Summary</title>
    
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    
  <style>
        /* General Page Styles */
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }
        
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f4f6f9;
            margin: 0;
            padding: 0;
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar Styles */
        .sidebar {
            width: 250px;
            background: #2c3e50;
            color: #ecf0f1;
            height: 100vh;
            position: fixed;
            left: 0;
            top: 0;
            overflow-y: auto;
            transition: all 0.3s ease;
            z-index: 1000;
        }

        .sidebar-header {
            padding: 20px;
            background: #1a252f;
            text-align: center;
        }

        .sidebar-menu {
            padding: 15px 0;
        }

        .sidebar-menu ul {
            list-style: none;
        }

        .sidebar-menu li {
            padding: 0;
            margin: 0;
        }

        .sidebar-menu a {
            color: #bdc3c7;
            text-decoration: none;
            display: block;
            padding: 12px 20px;
            transition: all 0.3s;
        }

        .sidebar-menu a:hover, .sidebar-menu a.active {
            background: #34495e;
            color: #fff;
            border-left: 4px solid #3498db;
        }

        .sidebar-menu i {
            margin-right: 10px;
            width: 20px;
            text-align: center;
        }

        /* Main Content Area */
        .main-content {
            flex: 1;
            margin-left: 305px;
            padding: 20px;
            transition: all 0.3s ease;
        }

        /* Mobile Menu Toggle */
        .menu-toggle {
            display: none;
            position: fixed;
            top: 15px;
            left: 15px;
            background: #2c3e50;
            color: white;
            border: none;
            border-radius: 4px;
            padding: 10px;
            z-index: 1001;
            cursor: pointer;
        }
   
        /* Main Container */
        .container {
            max-width: 1200px;
            width: 100%;
            margin: 0 auto;
            background: #ffffff;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.15);
        }

        /* Page Title */
        h1 {
            text-align: center;
            font-size: 28px;
            font-weight: 600;
            color: #333;
            margin-bottom: 25px;
        }

        /* Filters Section */
        .filters {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            gap: 15px;
            background: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .filter-group {
            flex: 1;
            min-width: 200px;
        }

        .filter-group label {
            font-weight: 600;
            color: #555;
            display: block;
            margin-bottom: 5px;
        }

        .filter-group select,
        .filter-group input {
            width: 100%;
            padding: 10px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 6px;
            background: #fff;
        }

        /* Charts Layout */
        .charts {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-bottom: 30px;
        }

        .chart-container {
            flex: 1;
            min-width: 300px;
            background: #fff;
            border-radius: 8px;
            padding: 15px;
            box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.1);
        }

        .chart-container canvas {
            width: 100% !important;
            height: 300px !important;
        }

        /* Section Title */
        h2 {
            font-size: 24px;
            font-weight: 600;
            margin-top: 30px;
            color: #444;
        }

        /* Table Container */
        .table-container {
            overflow-x: auto;
            border-radius: 8px;
            background: #fff;
            padding: 15px;
            box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        /* Table Styles */
        table {
            width: 100%;
            border-collapse: collapse;
            text-align: left;
            margin-top: 15px;
            min-width: 600px;
        }

        thead {
            background: #007bff;
            color: #fff;
        }

        thead tr th {
            padding: 14px;
            font-size: 16px;
            font-weight: 500;
        }

        tbody tr {
            border-bottom: 1px solid #ddd;
        }

        tbody tr td {
            padding: 12px;
            font-size: 15px;
            color: #333;
        }

        tbody tr:nth-child(even) {
            background: #f8f9fa;
        }

        tbody tr:hover {
            background: #e9ecef;
        }

        /* Responsive Adjustments */
        @media (max-width: 1024px) {
            .sidebar {
                width: 70px;
                transform: translateX(0);
            }
            
            .sidebar-header span, 
            .sidebar-menu a span {
                display: none;
            }
            
            .sidebar-menu i {
                margin-right: 0;
                font-size: 20px;
            }
            
            .main-content {
                margin-left: 70px;
            }
        }

        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
                width: 250px;
            }
            
            .sidebar-header span, 
            .sidebar-menu a span {
                display: inline;
            }
            
            .sidebar-menu i {
                margin-right: 10px;
                font-size: 16px;
            }
            
            .sidebar.active {
                transform: translateX(0);
            }
            
            .main-content {
                margin-left: 0;
                padding: 15px;
            }
            
            .menu-toggle {
                display: block;
            }
            
            .container {
                padding: 15px;
            }
            
            .filters {
                flex-direction: column;
            }
            
            .filter-group {
                width: 100%;
            }
            
            .charts {
                flex-direction: column;
            }
            
            .chart-container canvas {
                height: 250px !important;
            }
            
            h1 {
                font-size: 24px;
                margin-top: 40px;
            }
        }

        @media (max-width: 480px) {
            .container {
                padding: 10px;
            }
            
            h1 {
                font-size: 22px;
            }
            
            h2 {
                font-size: 20px;
            }
            
            thead tr th,
            tbody tr td {
                padding: 10px 8px;
                font-size: 14px;
            }
            
            .chart-container {
                padding: 10px;
            }
            
            .chart-container canvas {
                height: 220px !important;
            }
        }
    </style>
</head>
<body>
                                
    <%- include('../partials/sidebar') %>    

    <!-- Main Content -->
    <div class="main-content">
        <div class="container">
            <h1 class="page-title">üìä Work Hours Summary</h1>
        
            <div class="filters">
                <div class="filter-group">
                    <label for="employee">üë®‚Äçüíº Employee:</label>
                    <select id="employee">
                        <option value="">All Employees</option>
                    </select>
                </div>
                <div class="filter-group">
                    <label for="project">üìÅ Project:</label>
                    <select id="project">
                        <option value="">All Projects</option>
                        <% if (projects && projects.length > 0) { %>
                            <% projects.forEach(proj => { %>
                                <option value="<%= proj.project_id %>"><%= proj.project_name %></option>
                            <% }); %>
                        <% } else { %>
                            <option value="" disabled>No projects available</option>
                        <% } %>
                    </select>
                </div>
                <div class="filter-group">
                    <label for="month">üìÖ Month:</label>
                    <input type="month" id="month" value="<%= new Date().toISOString().slice(0,7) %>">
                    <div class="filter-group" style="display: none;"> 
                        <label for="pastMonth">üìÖ Include Past Month:</label>
                        <input type="checkbox" id="pastMonth">
                    </div>
                </div>
            </div>
    
        <div class="charts">
            <canvas id="workSummaryChart"></canvas>
            <canvas id="projectChart" style="display:none;"></canvas>
        </div>
    
        <h2 class="section-title">üìÖ Date-wise Work Summary</h2>
        <div class="table-container">
            <table>
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Employee</th>
                        <th>Project</th>
                        <th>Work Description</th>
                        <th>Work Hours</th>
                    </tr>
                </thead>
                <tbody id="reportTableBody">
                    <tr><td colspan="5">Loading data...</td></tr>
                </tbody>
            </table>
        </div>
    </div>
    </div>
        </div>
    <script>
 document.addEventListener("DOMContentLoaded", function () {
    const empSelect = document.getElementById("employee");
    const projSelect = document.getElementById("project");
    const monthSelect = document.getElementById("month");
    const pastMonthCheckbox = document.getElementById("pastMonth");
    const monthSelectGroup = document.getElementById("monthSelectGroup");
    const reportTableBody = document.getElementById("reportTableBody");
    let workChart = null;

    // Function to populate past months in dropdown
    function populatePastMonths() {
        const today = new Date();
        monthSelect.innerHTML = '<option value="">-- Select Month --</option>'; // Reset options

        for (let i = 1; i <= 6; i++) {  // Last 6 months
            let pastDate = new Date(today.getFullYear(), today.getMonth() - i, 1);
            let monthValue = pastDate.toISOString().slice(0, 7); // Format YYYY-MM
            let monthName = pastDate.toLocaleString('default', { month: 'long', year: 'numeric' });

            let option = new Option(monthName, monthValue);
            monthSelect.appendChild(option);
        }
    }

    // Show/hide month selection dropdown based on checkbox
    pastMonthCheckbox.addEventListener("change", function () {
        if (this.checked) {
            monthSelectGroup.style.display = "block";
            populatePastMonths();
        } else {
            monthSelectGroup.style.display = "none";
            monthSelect.value = ""; // Reset selection
        }
        fetchSummary();
    });

    // Function to fetch employee list
    fetch("/dashboard/employee/projects/get-employees")
        .then(res => res.json())
        .then(data => {
            data.forEach(emp => {
                let option = document.createElement("option");
                option.value = emp.emp_id;
                option.textContent = emp.name;
                empSelect.appendChild(option);
            });
        });

    // Function to fetch project list
    // fetch("/dashboard/employee/projects/get-projects")
    //     .then(res => res.json())
    //     .then(data => {
    //         data.forEach(proj => {
    //             let option = document.createElement("option");
    //             option.value = proj.project_id;
    //             option.textContent = proj.project_name;
    //             projSelect.appendChild(option);
    //         });
    //     });

    // Function to fetch summary data
    function fetchSummary() {
        const empId = empSelect.value;
        const projectId = projSelect.value;
        const selectedMonth = monthSelect.value;
        const includePastMonth = pastMonthCheckbox.checked;

        let start_date = "", end_date = "", prevMonthFlag = "";

        if (selectedMonth) {
            let [year, month] = selectedMonth.split("-");
            start_date = `${year}-${month}-01`;
            end_date = new Date(year, month, 0).toISOString().slice(0, 10);
        }

        if (includePastMonth) {
            prevMonthFlag = "&prev_month=true";
        }

        fetch(`/dashboard/employee/projects/get-summary?emp_id=${empId}&project_id=${projectId}&start_date=${start_date}&end_date=${end_date}${prevMonthFlag}`)
            .then(res => res.json())
            .then(data => {
                let daysInMonth = getFullMonthDays(start_date.split("-")[0], start_date.split("-")[1]);
                let hoursByDay = {}, projectHours = {};

                daysInMonth.forEach(day => hoursByDay[day] = 0);

                data.daily.forEach(entry => {
                    let day = new Date(entry.date).getDate().toString();
                    hoursByDay[day] += entry.hours || 0;
                });

                projectHours = data.projectWise;

                renderChart(daysInMonth, Object.values(hoursByDay), data.daily);
                renderProjectChart(projectHours);
                renderTable(data.daily);
            })
            .catch(error => {
                console.error("Error fetching data:", error);
                reportTableBody.innerHTML = `<tr><td colspan="5">Error loading data.</td></tr>`;
            });
    }

    // Function to get all days in a month
    function getFullMonthDays(year, month) {
        let daysInMonth = new Date(year, month, 0).getDate();
        return Array.from({ length: daysInMonth }, (_, i) => (i + 1).toString());
    }

    // Function to render bar chart for work summary
    function renderChart(dates, hours, rawData) {
        const canvas = document.getElementById("workSummaryChart");
        if (!canvas) {
            console.error("Canvas element not found: workSummaryChart");
            return;
        }

        const ctx = canvas.getContext("2d");
        if (workChart) workChart.destroy();

        workChart = new Chart(ctx, {
            type: "bar",
            data: {
                labels: dates,
                datasets: [{
                    label: "Total Work Hours",
                    data: hours,
                    backgroundColor: "rgba(54, 162, 235, 0.5)",
                    borderColor: "rgba(54, 162, 235, 1)",
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function (tooltipItem) {
                                let index = tooltipItem.dataIndex;
                                let date = dates[index];

                                let entry = rawData.find(e => new Date(e.date).getDate() == date);
                                if (!entry) return `Date: ${date} - No Data`;

                                return `üìÖ Date: ${date}\nüìå Project: ${entry.project}\n‚è≥ Hours: ${entry.hours.toFixed(2)} hrs`;
                            }
                        }
                    }
                },
                scales: {
                    x: { title: { display: true, text: "Day of the Month" } },
                    y: { beginAtZero: true, title: { display: true, text: "Total Hours Worked" } }
                }
            }
        });
    }

    // Function to render project-wise pie chart
    function renderProjectChart(projectHours) {
        const ctx = document.getElementById("projectChart").getContext("2d");

        if (window.projectChart instanceof Chart) {
            window.projectChart.destroy();
        }

        window.projectChart = new Chart(ctx, {
            type: "pie",
            data: {
                labels: Object.keys(projectHours),
                datasets: [{
                    data: Object.values(projectHours),
                    backgroundColor: ["#FF6384", "#36A2EB", "#FFCE56", "#4CAF50", "#FF9800"]
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top'
                    }
                }
            }
        });
    }

    // Function to render data table
    function renderTable(data) {
        reportTableBody.innerHTML = "";

        if (!Array.isArray(data) || data.length === 0) {
            reportTableBody.innerHTML = `<tr><td colspan="5">No records found.</td></tr>`;
            return;
        }

        let lastDate = "";

        data.forEach(entry => {
            let entryDate = formatDate(entry.date);
            if (entryDate !== lastDate) {
                let dateRow = document.createElement("tr");
                dateRow.innerHTML = `
                    <td colspan="5" style="background-color: #f1f1f1; font-weight: bold; text-align: center;">
                        ${entryDate}
                    </td>
                `;
                reportTableBody.appendChild(dateRow);
                lastDate = entryDate;
            }

            let row = document.createElement("tr");
            row.innerHTML = `
                <td></td>
                <td>${entry.emp_id || "N/A"}</td>
                <td>${entry.project || "Unknown Project"}</td>
                <td>${entry.work_description || "N/A"}</td>
                <td>${entry.hours ? `${entry.hours.toFixed(2)} hrs` : "0 hrs"}</td>
            `;
            reportTableBody.appendChild(row);
        });
    }

    function formatDate(dateStr) {
        let date = new Date(dateStr);
        return date.toDateString().slice(0, 10);
    }

    empSelect.addEventListener("change", fetchSummary);
    projSelect.addEventListener("change", fetchSummary);
    monthSelect.addEventListener("change", fetchSummary);
    fetchSummary();
});

    </script>

</body>
</html>
